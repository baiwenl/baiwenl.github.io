BASE="."
CONF={
	'version'=>"0.0.1",
	'includes'=>File.join(BASE,"_includes"),
	'layouts'=>File.join(BASE,"_layouts"),
	'posts'=>File.join(BASE,"_posts"),
	'post_ext'=>"md"
}

#Usage: rake post title="A Title" [date="2015-0209"] [tags=[tag1,tag2]] [category="category"]
desc "Begin a new post in #{CONF['posts']}. Usage:rake post title=\"A Title\" [date=\"2015-0209\"] [tags=[tag1,tag2]] [category=\"category\"]"
task :post do
	abort("rake aborted: '#{CONF['posts']}' directory not found.") unless FileTest.directory?(CONF['posts'])
	title=ENV["title"] || "new-post"
	tags=ENV["tags"] || "[]"
	category=ENV["tags"] || ""
  category="\"#{category.gsub(/-/,' ')}\"" if !category.empty?
	slug=title.downcase.strip.gsub(' ','-').gsub(/[^\w-]/,'')
	begin
	date=(ENV['date']?Time.parse(ENV['date']):Time.now).strftime('%Y-%m-%d')
	rescue=>e
		put "Error -date format must be YYY-MM-DD,please check you typed it correctly!"
		exit -1
	end
	filename=File.join(CONF['posts'],"#{date}-#{slug}.#{CONF['post_ext']}")
	if File.exist?(filename)
		abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?",['y','n'])=='n'
	end

	puts "Creating new post: #{filename}"
	open(filename,'w') do |post|
		post.puts "---"
		post.puts "layout: post"
		post.puts "title: \"#{title}\""
		post.puts "date: "+Time.now.strftime('%Y-%m-%d %H:%M:%S %z')
		post.puts "published: true"
		post.puts "description: \"#{title}\""
		post.puts "category: #{category}"
		post.puts "categories: #{category}"
		post.puts "tags: #{tags}"
		post.puts "---"
		post.puts "\r\n"
	end
end # task :post

#Usage: rake page name="about.html"
#You can also specify a sub-directory path.
#If you don't specify a file extention we create an index.html at the path specified
desc "Create a new page."
task :page do
	name=ENV["name"] || "new-page.md"
	filename=File.join(BASE,"#{name}")
	filename=File.join(filename,"index.html") if File.extname(filename)==""
	title=File.basename(filename,File.extname(filename)).gsub(/[\w\_]/," ").gsub(/\b\w/){$&.upcase}
	if File.exist?(filename)
		abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?",['y','n'])=='n'
	end

	mkdir_p File.dirname(filename)
	puts "Create new page: #{filename}"
	open(filename,'w') do |post|
		post.puts "---"
		post.puts "layout: page"
		post.puts "title: "
		post.puts "description: \"\""
		post.puts "---"
		post.puts "\r\n"
	end
end # task :page


def ask(message,valid_options)
	if valid_options
		answer = get_stdin("#{message} #{valid_options.to_s.gsub(/"/, '').gsub(/, /,'/')} ") while !valid_options.include?(answer)
  else
    answer = get_stdin(message)
  end
  answer
end

def get_stdin(message)
  print message
  STDIN.gets.chomp
end
